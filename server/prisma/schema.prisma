// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URI")
}

model User {
  id       Int      @id @default(autoincrement()) @db.UnsignedInt
  email    String   @unique @db.VarChar(50)
  name     String   @db.VarChar(100)
  password String   @db.VarChar(100)
  travels  Travel[]
  // Guests   Guests[]
}

model Travel {
  id              Int         @id @default(autoincrement()) @db.UnsignedInt
  userId          Int         @db.UnsignedInt
  user            User        @relation(fields: [userId], references: [id], onDelete: Restrict)
  local           String      @db.VarChar(100)
  startDate       DateTime    @db.Date
  endDate         DateTime    @db.Date
  description     String      @db.VarChar(100)
  numParticipants Int         @db.UnsignedInt
  hosts           Host[]
  transports      Transport[]
  events          Event[]
  // Guests          Guests[]
}

model Host {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  type      String   @db.VarChar(50)
  startTime DateTime @db.DateTime
  endTime   DateTime @db.DateTime
  local     String   @db.VarChar(100)
  price     Decimal  @db.Decimal(10, 2)
  contact   String   @db.VarChar(50)
  travelId  Int      @db.UnsignedInt
  travel    Travel   @relation(fields: [travelId], references: [id], onDelete: Cascade)
}

model Transport {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  type       String   @db.VarChar(50)
  startLocal String   @db.VarChar(100)
  endLocal   String   @db.VarChar(100)
  startTime  DateTime @db.DateTime
  endTime    DateTime @db.DateTime
  price      Decimal  @db.Decimal(10, 2)
  contacts   String   @db.VarChar(50)
  travelId   Int      @db.UnsignedInt
  travel     Travel   @relation(fields: [travelId], references: [id], onDelete: Cascade)
}

model Event {
  id                Int      @id @default(autoincrement()) @db.UnsignedInt
  transportType     String   @db.VarChar(50)
  departureLocation String   @db.VarChar(100)
  eventTime         DateTime @db.DateTime
  eventValue        Decimal  @db.Decimal(10, 2)
  eventExtras       String   @db.Text
  travelId          Int      @db.UnsignedInt
  travel            Travel   @relation(fields: [travelId], references: [id], onDelete: Cascade)
  // EventGuests       EventGuests[]
}

model Guests {
  id       Int @id @default(autoincrement()) @db.UnsignedInt
  userId   Int @db.UnsignedInt
  travelId Int @db.UnsignedInt

  // TODO: Descomentar para fazer o relacionamento dos convidados
  // Tabela com o usuario e qual viagem ele vai participar
  // user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  // travel   Travel @relation(fields: [travelId], references: [id], onDelete: Cascade)
  // EventGuests EventGuests[]
}

model EventGuests {
  id      Int @id @default(autoincrement()) @db.UnsignedInt
  eventId Int @db.UnsignedInt

  // Id do convidado
  idGuest Int @db.UnsignedInt

  // TODO: Descomentar para fazer o relacionamento
  // event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  // guests  Guests @relation(fields: [idGuest], references: [id], onDelete: Cascade)
}
